@model BandAide.Models.ViewModels.CreateInstrumentSkillViewModel

@{
    ViewData["Title"] = "Create";
}
<script src="~/Scripts/additional-methods.js"></script>

<div class="container" style="padding-top:2em">
    <form asp-action="Create" asp-controller="InstrumentSkill" method="post">
        <div class="row">
            <input asp-for="AppUserId" type="hidden" />
            <div class="col-md-8">
                <div class="form-group">
                    <label asp-for="InstrumentId">Instrument</label>
                    <select asp-for="InstrumentId" id="instrumentSelect" class="selectpicker" title="Instrument" data-live-search="true" data-style="btn-primary">
                        @foreach (var instrument in Model.Instruments)
                        {
                            <option value="@instrument.Id">@instrument.Name</option>}
                    </select>
                </div>
                <div class="form-group">
                    <label asp-for="Proficiency">Proficiency</label>
                    <input asp-for="Proficiency" id="ex1" data-slider-id='ex1Slider' type="text" data-slider-min="0" data-slider-max="100" data-slider-step="1" data-slider-value="50" />
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </form>

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>


    <div class="row">
        <div class="col">
            <a class="btn btn-primary" href="@ViewData["ReturnUrl"]">Back</a>
        </div>
    </div>
</div>

<script>
    $('#ex1').slider({
        formatter: function (value) {
            return 'Current value: ' + value;
        }
    });
</script>
